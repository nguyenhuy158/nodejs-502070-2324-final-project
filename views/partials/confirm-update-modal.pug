doctype html
html(lang='en')

    head
        title Danh sách sản phẩm
        meta(charset='utf-8')
        meta(name='viewport', content='width=device-width, initial-scale=1')
        link(rel='stylesheet', href='https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css')
        script(src='https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js')
        script(src='https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js')
        script(src='https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js')
        style.
            #flash-alert {
                position: fixed;
                top: 10px;
                right: 10px;
                z-index: 9999;
            }

    body
        .container.mt-5
            h4.my-5.text-primary.text-center.text-uppercase Danh sách người dùng
            a.btn.btn-success.btn-sm.my-4(href='/students/add') Thêm người dùng
            p Chọn một người dùng để xem chi tiết
            // Table students
            table.table.table-striped.border
                thead
                    tr
                        th STT
                        th Họ và tên
                        th Giới tính
                        th Tuổi
                        th Email
                        th Thao tác
                tbody
                    each student in students
                        tr
                            td= student.id
                            td
                                a(href=`/students/${student.id}`)= student.fullName
                            td= student.gender
                            td= student.age
                            td= student.email
                            td
                                button.btn.btn-sm.btn-outline-primary.edit-btn(
                                    data-user-id=student.id
                                    data-user-name=student.fullName
                                    data-age-name=student.age
                                    data-gender-name=student.gender
                                    data-email-name=student.email
                                ) Chỉnh sửa
                                button.btn.btn-sm.btn-outline-danger.delete-btn(
                                    data-product-id=student.id
                                    data-product-product-name=student.fullName
                                ) Xóa
            p Tổng số người dùng: strong.text-danger #{students.length}

        // Confirm delete
        .modal.fade#modalDelete(tabindex='-1', aria-labelledby='exampleModalLabel', aria-hidden='true')
            .modal-dialog
                .modal-content
                    // Modal Header
                    .modal-header
                        h4.modal-title Xóa người dùng
                        button.close(data-dismiss='modal') &times;

                    // Modal body
                    .modal-body
                        | Bạn có chắc rằng muốn xóa
                        strong Trần Minh Trí
                        | ?

                    // Modal footer
                    .modal-footer
                        button.btn.btn-danger Xóa
                        button.btn.btn-dark(data-dismiss='modal') Đóng

        // End Confirm delete

        // Update user
        .modal.fade#modalEdit(tabindex='-1', aria-labelledby='exampleModalLabel', aria-hidden='true')
            .modal-dialog
                .modal-content
                    // Modal Header
                    .modal-header
                        h4.modal-title Cập nhật thông tin người dùng
                        button.close(data-dismiss='modal') &times;

                    form#editForm(action='', method='POST')
                        // Modal body
                        .modal-body
                            input#id(type='hidden', value='')
                            .form-group
                                label(for='name') Họ tên
                                input#name.form-control(type='text', placeholder='', name='name', value='')
                            .form-group
                                .custom-control.custom-radio.custom-control-inline
                                    input.custom-control-input(type='radio', id='gender-male', name='gender', value='male', checked)
                                    label.custom-control-label(for='gender-male') Nam
                                .custom-control.custom-radio.custom-control-inline
                                    input.custom-control-input(type='radio', id='gender-female', name='gender', value='female')
                                    label.custom-control-label(for='gender-female') Nữ
                            .form-group
                                label(for='age') Tuổi
                                input#age.form-control(type='number', placeholder='Nhập tuổi', name='age', value='20', maxlength='3', min='18', max='100')
                            .form-group
                                label(for='email') Email
                                input#email.form-control(type='text', placeholder='Nhập email', name='email', value='tri@gmail.com')
                            if error
                                .alert.alert-danger
                                    | Vui lòng nhập đầy đủ thông tin

                        // Modal footer
                        .modal-footer
                            button.btn.btn-primary(type='submit') Cập nhật
                            button.btn.btn-dark(data-dismiss='modal') Đóng

        // End Update user

        // script confirm delete
        script.
            $(document).ready(function () {
                const deleteButtons = $(".delete-btn");
                const confirmModalBody = $("#modalDelete .modal-body");
                const confirmDeleteButton = $("#modalDelete .btn.btn-danger");

                deleteButtons.click(function () {
                    const fullName = $(this).data("product-product-name");
                    const userId = $(this).data("product-id");
                    confirmModalBody.text(`Bạn có chắc rằng muốn xóa ${fullName}?`);
                    $('#modalDelete').modal('show');

                    confirmDeleteButton.click(function () {
                        $('#modalDelete').modal('hide');
                        // Delete user using Fetch API
                        fetch(`/students/delete/${userId}`, {
                            method: "DELETE"
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    $("#flash-alert span").text(`Đã xóa người dùng ${fullName}`);
                                    $("#flash-alert").show().delay(2000).fadeOut(2000);
                                    location.reload();
                                } else {
                                    console.log("Failed to delete user:", data.error);
                                }
                            })
                            .catch(error => {
                                console.log("Error in deleting user:", error);
                            });
                    });
                });
            });
        // End script confirm delete

        // script edit
        script.
            $(document).ready(function () {
                const editButtons = $(".edit-btn");
                const editModal = $("#modalEdit");
                const editForm = $("#editForm");
                console.log("🚀 ~ file: list.handlebars:216 ~ editForm:", editForm);
                editButtons.click(function () {
                    const userId = $(this).data("user-id");
                    const fullName = $(this).data("user-name");
                    const age = $(this).data("age-name");
                    const gender = $(this).data("gender-name");
                    const email = $(this).data("email-name");
                    // Populate form fields with user data
                    editForm.find("#id").val(userId);
                    editForm.find("#name").val(fullName);
                    editForm.find(`#gender-${gender.toLowerCase()}`).prop("checked", true);
                    editForm.find("#age").val(age);
                    editForm.find("#email").val(email);
                    editModal.modal("show");
                });
                editForm.submit(function (event) {
                    event.preventDefault();
                    const userId = $(this).find("#id").val();
                    const fullName = $(this).find("#name").val();
                    const gender = $(this).find("input[name='gender']:checked").val();
                    const age = $(this).find("#age").val();
                    const email = $(this).find("#email").val();
                    // Perform form validation
                    if (!fullName || !gender || !age || !email) {
                        $(this).find(".alert-danger").show();
                        return;
                    }
                    // Update user using Fetch API
                    fetch(`/students/update/${userId}`, {
                        method: "PUT",
                        headers: {
                            "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                            fullName,
                            gender,
                            age,
                            email
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.success) {
                                $("#flash-alert span").text(`Đã cập nhật người dùng ${fullName}`);
                                $("#flash-alert").show().delay(2000).fadeOut(2000);
                                location.reload();
                            } else {
                                console.log("Failed to update user:", data.error);
                            }
                        })
                        .catch(error => {
                            console.log("Error in updating user:", error);
                        });
                    editModal.modal("hide");
                });
            });
        // End script edit
