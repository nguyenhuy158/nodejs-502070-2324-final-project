extends ../layout.pug

block content
    .content
        include ../../partials/nav
            .container
                .row
                    .col
                        a.btn.btn-primary(href="/products/add") Add product

                //.col-2.form-floating
                //    select#floatingSelect.form-select(onchange='updatePerPage(this)')
                //        option(selected='' value='10') 10
                //        option(value='20') 20
                //        option(value='30') 30
                //        option(value='40') 40
                //        option(value='50') 50
                //    label(for='floatingSelect') Product per page


            // Pagination
            +pagination('/products', current, count, perPage)

            // Table plugin
            // Table list
            div.container
                h2 Product List
                // Display the message
                //p Display #{Math.min((current - 1) * perPage + 1, count)} to #{Math.min(current * perPage, count)} of #{count} data
                table#product-table.table.table-striped.table-bordered.table-rounded.rounded(style="width:100%")
                    thead
                        tr
                            th STT
                            th Barcode
                            th Product Name
                            th Import Price
                            th Retail Price
                            th Category
                            th Thumbnail
                            th

                    tbody
                    //if products && products.length > 0
                    //    each product, index in products
                    //        tr
                    //            td= index + 1
                    //            td= product.barcode
                    //            td= product.productName
                    //            td= product.importPrice
                    //            td= product.retailPrice
                    //            td= product.category.name
                    //            td
                    //                +renderProfilePicture(product.imageUrls[0])
                    //            td
                    //                a.my-1.btn.btn-primary(href=`/products/${product._id}`) View
                    //                button.my-1.btn.btn-success.btn-edit(
                    //                    data-product-id=`${product._id}`
                    //                    data-href=`/products/${product._id}/edit`
                    //                ) Update
                    //                button.my-1.btn.btn-danger.delete-btn(
                    //                    data-product-name=`${product.productName}`
                    //                    data-product-id=`${product._id}`
                    //                ) Delete
                    //else
                    //    tr
                    //        td.text-center.p-5.h4(colspan='12') No products found.

            // Confirm modal
            include ../../partials/confirm-delete-modal

            // Confirm modal
            include ../../partials/product-edit-modal

            #flash-alert.alert.alert-danger(style="display: none")
                span Flash alert message

            // Script for confirming delete
            script(src="js/products/confirm-delete.js")
            script(src="js/products/product-edit-modal.js")
            // End script for confirming delete

            script.
                $(() => {
                    let table = $("#product-table")
                        .DataTable({
                            responsive: true,
                            rowId: '_id',
                            fixedHeader: true,
                            search: {
                                caseInsensitive: false,
                                regex: true
                            },
                            language: {
                                zeroRecords: "No records to display",
                                emptyTable: "No data available in table",
                                decimal: '.',
                                thousands: ','
                            },
                            retrieve: true,
                            lengthMenu: [[10, 25, 50, -1], [10, 25, 50, "All"]],
                            stateSave: true,
                            scrollX: true,
                            scrollY: "50vh",
                            scrollCollapse: true,
                            order: [[0, 'asc']],
                            processing: true,
                            autoWidth: true,
                            ajax: {
                                url: '/api/products',
                                dataSrc: ''
                            },
                            columns: [
                                {
                                    data: null,
                                    render: function (data, type, row, meta) {
                                        return meta.row + 1;
                                    },
                                    orderable: false
                                },
                                {data: 'barcode'},
                                {
                                    data: 'productName',
                                    render: function (data, type, row) {
                                        return `<a href="/products/${row._id}">${data}</a>`;
                                    }
                                },
                                {
                                    data: 'importPrice',
                                    render: function (data, type, row) {
                                        const number = parseInt(data, 10);
                                        return number.toLocaleString('vi-VN', {
                                            style: 'currency',
                                            currency: 'VND'
                                        });
                                    }
                                },
                                {
                                    data: 'retailPrice',
                                    render: function (data, type, row) {
                                        const number = parseInt(data, 10);
                                        return number.toLocaleString('vi-VN', {
                                            style: 'currency',
                                            currency: 'VND'
                                        });
                                    }
                                },
                                {data: 'category.name'},
                                {
                                    data: 'imageUrls',
                                    render: function (data, type, row) {
                                        return `<a class="image-popup" href=${data[0]} title="${row.productName}">
                                                    <img class="lazy" width="100" height="100" data-src="${data[0]}"/>
                                                </a>`;
                                    }
                                },
                                {
                                    data: null,
                                    render: function (data, type, row, meta) {
                                        return '';
                                    }
                                },
                            ]
                        });
                    table.on('draw.dt', function () {
                        var info = table.page.info();
                        table.column(0, {search: 'applied'})
                            .nodes()
                            .each(function (cell, i) {
                                cell.innerHTML = i + 1 + info.start;
                            });

                        lazyImageLoading();
                        magnificPopup();
                    });

                    $("#product-table")
                        .DataTable({
                            retrieve: true,
                            stateSave: true,
                            stateSaveCallback: function (settings, data) {
                                localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))
                            },
                            stateLoadCallback: function (settings) {
                                return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))
                            }
                        });

                    function updatePerPage(select) {
                        const selectedValue = select.value;
                        window.location.href = `/products?page=#{current}&perPage=${selectedValue}`;
                    }
                });


