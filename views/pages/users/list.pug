extends ../layout.pug
block content
    .content
        include ../../partials/nav
        .container
            .row
                .col.my-3
                    a.btn.btn-primary(href="/users/create-account") Create salespeople
                    a#reload-user-table.btn.btn-primary.ms-3 Reload

        div.container
            h2 User List
            table#user-table.table.table-sm.table-striped.table-bordered
                thead
                    tr
                        th STT
                        th Avatar
                        th Email
                        th Username
                        th Full Name
                        th Role
                        th First Login
                        th Inactivate Status
                        th Locked Status
                        th Handle
                tbody
                //if users && users.length > 0
                //    each user, index in users
                //        tr
                //            td= index + 1
                //            td
                //                +renderProfilePicture(user.profilePicture)
                //            td
                //                a.text-decoration-none(href=`/users/${user._id}`)=user.email
                //            td= user.username
                //            td= user.fullName
                //            td= user.role
                //            td= user.createdAtFormatted
                //            td= user.updatedAtFormatted
                //            td= user.isFirstLogin
                //            td= user.inactivateStatus
                //            td= user.lockedStatus
                //            td
                //                a.my-1.btn.btn-primary(href=`/users/${user._id}`) View
                //                br
                //                a.my-1.btn.btn-success(href=`/users/${user._id}/edit`) Update
                //                br
                //                button.my-1.btn.btn-danger.delete-btn(
                //                    data-user-name=`${user.fullName}`
                //                    data-user-id=`${user._id}`
                //                ) Delete
                //                br
                //                a.my-1.btn.btn-secondary(href=`/users/${user._id}/resend`) Resend Email
                //                br
                //                if user.lockedStatus
                //                    button.my-1.btn.btn-warning.unlock-btn(
                //                        data-user-name=`${user.fullName}`
                //                        data-user-id=`${user._id}`
                //                    ) Unlock
                //                else
                //                    button.my-1.btn.btn-info.lock-btn(
                //                        data-user-name=`${user.fullName}`
                //                        data-user-id=`${user._id}`
                //                    ) Lock
                //else
                //    tr
                //        td.text-center.p-5.h4(colspan='11') No users found.
        //// Display the message
        //p Display #{Math.min((current - 1) * perPage + 1, count)} to #{Math.min(current * perPage, count)} of #{count} data
        //// Pagination
        //+pagination('/users', current, count, perPage)
        // Confirm modal
        include ../../partials/confirm-delete-modal
        #flash-alert.alert.alert-danger(style="display: none")
            span Flash alert message
    // Script for confirming delete
    script.
        $(document).ready(function () {
            const deleteButtons = $(".delete-btn");
            const modalTitle = $("#modalDelete .modal-title");
            const confirmModalBody = $("#modalDelete .modal-body");
            const confirmButton = $("#modalDelete .btn.btn-danger");
            deleteButtons.click(function () {
                const fullname = $(this).data("user-name");
                const userId = $(this).data("user-id");
                console.log("=>(list.pug:99) userId", userId);
                modalTitle.text('Delete confirm');
                confirmButton.text('Delete');
                confirmModalBody.html(`Are you sure you want to delete
                <strong>${fullname}</strong>?`);
                $('#modalDelete').modal('show');
                confirmButton.click(function () {
                    $('#modalDelete').modal('hide');
                    console.log('click');
                    console.log(`/users/${userId}`);
                    fetch(`/users/${userId}`, {
                        method: "DELETE"
                    })
                        .then(response => response.json())
                        .then(data => {
                            console.log("=>(list.pug:113) data", data);
                            location.reload();
                        })
                        .catch(error => {
                            console.log("Error in deleting:", error);
                        });
                });
            });
        });
    // End script for confirming delete
    // Script for confirming lock/unlock
    script.
        $(document).ready(function () {
            const lockButtons = $(".lock-btn");
            const unlockButtons = $(".unlock-btn");
            const confirmModalBody = $("#modalDelete .modal-body");
            const confirmButton = $("#modalDelete .btn.btn-danger");
            const modalTitle = $("#modalDelete .modal-title");

            function handleLockUnlock(button, isLock) {
                button.click(function () {
                    const fullname = button.data("user-name");
                    const userId = button.data("user-id");
                    const action = isLock ? "lock" : "unlock";
                    modalTitle.text(isLock ? "Lock confirm" : "Unlock confirm")
                    confirmButton.text(isLock ? "Lock" : "Unlock");
                    confirmModalBody.html(`Are you sure you want to ${action} the account for
                       <strong>${fullname}</strong>?`);
                    $('#modalDelete').modal('show');
                    confirmButton.click(function () {
                        $('#modalDelete').modal('hide');
                        fetch(`/users/${userId}/${action}`, {
                            method: "PUT"
                        })
                            .then(response => response.json())
                            .then(data => {
                                location.reload();
                            })
                            .catch(error => {
                                console.log(`Error in ${action}ing the account:`, error);
                            });
                    });
                });
            }

            handleLockUnlock(lockButtons, true);
            handleLockUnlock(unlockButtons, false);
        });
    // End script for confirming lock/unlock

    // Script Datatables plugin
    script.
        $(() => {
            let table = $("#user-table")
                .DataTable({
                    responsive: true,
                    rowId: '_id',
                    fixedHeader: true,
                    search: {
                        caseInsensitive: false,
                        regex: true
                    },
                    language: {
                        zeroRecords: "No records to display",
                        emptyTable: "No data available in table",
                        decimal: '.',
                        thousands: ','
                    },
                    retrieve: true,
                    lengthMenu: [[5, 10, 25, -1], [5, 10, 25, "All"]],
                    stateSave: true,
                    scrollX: true,
                    scrollY: "50vh",
                    scrollCollapse: true,
                    order: [[0, 'asc']],
                    processing: true,
                    autoWidth: true,
                    ajax: {
                        url: '/api/users',
                        dataSrc: ''
                    },
                    columns: [
                        {
                            data: null,
                            render: function (data, type, row, meta) {
                                return meta.row + 1;
                            },
                            orderable: false
                        },
                        {
                            data: 'profilePicture',
                            render: function (data, type, row) {
                                return `<a class="image-popup" href=${data} title="${row.fullName}">
                                            <img class="lazy" width="100" height="100" data-src="${data}"/>
                                        </a>`;
                            }
                        },
                        {data: 'email'},
                        {data: 'username'},
                        {data: 'fullName'},
                        {data: 'role'},
                        {data: 'isFirstLogin'},
                        {data: 'inactivateStatus'},
                        {data: 'lockedStatus'},
                        {
                            data: null,
                            render: function (data, type, row, meta) {
                                return '';
                            }
                        },
                    ]
                });
            table.on('draw.dt', function () {
                var info = table.page.info();
                table.column(0, {search: 'applied'})
                    .nodes()
                    .each(function (cell, i) {
                        cell.innerHTML = i + 1 + info.start;
                    });
                lazyImageLoading();
                magnificPopup();
            });
            $("#product-table")
                .DataTable({
                    retrieve: true,
                    stateSave: true,
                    stateSaveCallback: function (settings, data) {
                        localStorage.setItem('DataTables_' + settings.sInstance, JSON.stringify(data))
                    },
                    stateLoadCallback: function (settings) {
                        return JSON.parse(localStorage.getItem('DataTables_' + settings.sInstance))
                    }
                });

            function updatePerPage(select) {
                const selectedValue = select.value;
                // Update the URL with the selected users per page value
                window.location.href = `/users?page=#{current}&perPage=${selectedValue}`;
            }

            $('#reload-user-table').on('click', () => {
                $('#user-table').DataTable().ajax.reload(function (json) {
                    console.log("The data has been refreshed:", json);
                });
            });
        });
